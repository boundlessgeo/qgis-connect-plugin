sudo: required
addons:
  hosts:
    - boundless-test
services:
    - docker
env:
  global:
    - PLUGIN_NAME=boundlessconnect
  matrix:
    - QGIS_VERSION_TAG=master
    - QGIS_VERSION_TAG=release
before_install:
    - docker pull elpaso/qgis-testing-environment:${QGIS_VERSION_TAG}
    - docker tag elpaso/qgis-testing-environment:${QGIS_VERSION_TAG} qgis-testing-environment
install:
    - docker run -d --name qgis-testing-environment -v ${TRAVIS_BUILD_DIR}:/tests_directory -e DISPLAY=:99 qgis-testing-environment
    - sleep 10

    # Standard QGIS plugin setup
    - docker exec -it qgis-testing-environment sh -c "qgis_setup.sh $PLUGIN_NAME"

    # Install the plugin
    - docker exec -it qgis-testing-environment sh -c "pip install paver"
    - docker exec -it qgis-testing-environment sh -c "cd /tests_directory && paver setup"
    - docker exec -it qgis-testing-environment sh -c "mkdir -p /root/.qgis2/python/plugins/"
    - docker exec -it qgis-testing-environment sh -c "ln -s /tests_directory/$PLUGIN_NAME /root/.qgis2/python/plugins/$PLUGIN_NAME"

    # Disable first run wizard
    - PLUGIN_VERSION=`grep version $PLUGIN_NAME/metadata.txt | perl -npe 's/[^\d-]//g'`
    - docker exec -it qgis-testing-environment sh -c "mkdir -p /root/.config/Boundless; printf \"[General]\n\" >> /root/.config/Boundless/BoundlessConnect.conf"
    - docker exec -it qgis-testing-environment sh -c "printf  \"firstRun${PLUGIN_VERSION}=false\n\n\" >> /root/.config/Boundless/BoundlessConnect.conf"

script:
    # Run the unit tests
    - docker exec -it qgis-testing-environment sh -c "qgis_testrunner.sh ${PLUGIN_NAME}.tests.testerplugin.run_tests"
notifications:
  slack:
    secure: baDd8yfaSifW04GxsYAXRtlIxz8zMd8Eb8dENVWSV+jrx0Z0d+GVFRKO0nnsSnDAw8XZgxNbUz9N+t2j6YE8Sz++U5bjCtam4vPBgNeAvu4NjfkhlH1sTTE2nGA1vvyvGNr2Z/YosPY/8weeRqnaYoOdEI1k/sTkbbiKvzEgW+FL9U9lA2xC/b9r+LycDHSjH9UMzNp7hzjFwJlQPO3jo1tXOHLy2VFfuRAxf8MrQS0aM3DggGKneo9bfJV6aBoMyWsKE/P2bTgHxbk3SvlycSEUVUhH4bqfO2tLl2M2NQVcmRzzlZoGp+EEzBCVzVZm/yjQqpKFt/+aLtHjeYvuXD+zaxZMZ+R+YriuXbrjvWPpx1VAOuo3DAce9KB80QyEy/lBtkvQUrDC7tajVB7wT/A3Jbh1UXTZJ91mp4PRaPwcZAD+ZsU/kke1Y5OsTpZjjCyXrsOmhE0MrBllK6M+fWHwlfRV7+8c9We5mfhKQ5blF1gnWaB1cHcqO7xK1IEj2aTcBfCkVepJFlsdfx6wbM2IPdGed1jukAOfh36EGP61qUhcHFqaRmpp3qQjx2JdRXSMaG+itEn6Kmfs0O3hMgDipS6QLiMHqeJV00eMEHDzh9kpO1yPbtN0kPmcWQ4tEjcBSdqZ2XOo4badZacd61+TONlgKn9E+lx87CGVUdU=
